--create database bookNet;

create table users
(
	user_id serial not null,
	user_name varchar,
	password varchar,
	email varchar,
	role varchar,
	online boolean
);

create unique index users_user_id_uindex
	on users (user_id);

alter table users
	add constraint users_pk
		primary key (user_id);


create table books
(
	book_id serial not null,
	header varchar,
	author varchar,
	overview varchar,
	photo varchar,
	file int,
	status varchar
);

create unique index books_book_id_uindex
	on books (book_id);
create table genres
(
	genre_id serial not null,
	genre_name varchar
);

create unique index genres_genre_id_uindex
	on genres (genre_id);

alter table genres
	add constraint genres_pk
		primary key (genre_id);

create table announcement
(
	announcement_id serial not null,
	description varchar(100),
	announcement_date date,
	book_id int
		constraint announcement_books_book_id_fk
			references books (book_id)
				on update cascade on delete cascade,
	priority varchar,
	admin_id int
		constraint announcement_admins_user_id_fk
			references users
				on update cascade on delete cascade
);

create unique index announcement_announcement_id_uindex
	on announcement (announcement_id);

alter table announcement
	add constraint announcement_pk
		primary key (announcement_id);



create table user_books
(
	id serial not null,
	user_id int
		constraint user_books_users_user_id_fk
			references users (user_id)
				on update cascade on delete cascade,
	book_id int
		constraint user_books_books_book_id_fk
			references books (book_id)
				on update cascade on delete cascade,
	is_read boolean,
	is_favorite boolean
);

create unique index user_books_id_uindex
	on user_books (id);

alter table user_books
	add constraint user_books_pk
		primary key (id);

create table criterions
(
	criterion_id serial not null,
	criterion varchar
);

create unique index criterions_criterion_id_uindex
	on criterions (criterion_id);

alter table criterions
	add constraint criterions_pk
		primary key (criterion_id);
create table achievment
(
	achievment_id serial not null,
	achievment_name varchar,
	achievment_text varchar,
	criterion_id int
		constraint achievment_criterions_criterion_id_fk
			references criterions (criterion_id)
				on update cascade on delete cascade
);

create unique index achievment_achievment_id_uindex
	on achievment (achievment_id);

alter table achievment
	add constraint achievment_pk
		primary key (achievment_id);
create table user_achievment
(
	id serial not null,
	user_id int
		constraint user_achievment_users_user_id_fk
			references users (user_id)
				on update cascade on delete cascade,
	achievment_id int
		constraint user_achievment_achievment_achievment_id_fk
			references achievment (achievment_id)
				on update cascade on delete cascade
);

create unique index user_achievment_id_uindex
	on user_achievment (id);

alter table user_achievment
	add constraint user_achievment_pk
		primary key (id);

create table review
(
	review_id serial not null,
	user_id int
		constraint review_users_user_id_fk
			references users
				on update cascade on delete cascade,
	book_id int
		constraint review_books_book_id_fk
			references books (book_id)
				on update cascade on delete cascade,
	text varchar,
	review_date date,
	grade int,
	admin_id int
		constraint review_admins_user_id_fk
			references users
				on update cascade on delete cascade
);

create unique index review_review_id_uindex
	on review (review_id);

alter table review
	add constraint review_pk
		primary key (review_id);




create table rights
(
	right_id serial not null,
	description varchar
);

create unique index rights_right_id_uindex
	on rights (right_id);

alter table rights
	add constraint rights_pk
		primary key (right_id);
create table adminRights
(
	id serial not null,
	admin_id int
		constraint adminRights_admins_user_id_fk
			references users (user_id)
				on update cascade on delete cascade,
	right_id int
		constraint adminRights_rights_right_id_fk
			references rights (right_id)
				on update cascade on delete cascade
);

create unique index adminRights_id_uindex
	on adminRights (id);

alter table adminRights
	add constraint adminRights_pk
		primary key (id);
insert into rights (description) VALUES ('delete book');

create table authors
(
	id serial not null,
	"author _name" varchar
);

create unique index authors_id_uindex
	on authors (id);

alter table authors
	add constraint authors_pk
		primary key (id);
create table book_author
(
	id serial not null,
	book_id int
		constraint book_author_books_book_id_fk
			references books (book_id)
				on update cascade on delete cascade,
	author_id int
		constraint book_author_authors_id_fk
			references authors
				on update cascade on delete cascade
);

create unique index book_author_id_uindex
	on book_author (id);

alter table book_author
	add constraint book_author_pk
		primary key (id);


create table chat
(
	chat_id serial not null
);

create unique index chat_chat_id_uindex
	on chat (chat_id);

alter table chat
	add constraint chat_pk
		primary key (chat_id);

create table messages
(
	message_id serial not null,
	chat_id int
		constraint messages_chat_chat_id_fk
			references chat
				on update cascade on delete cascade,
	user_id int
		constraint messages_users_user_id_fk
			references users,
	message text,
	date date
);

create unique index messages_message_id_uindex
	on messages (message_id);

alter table messages
	add constraint messages_pk
		primary key (message_id);


create table friends
(
	first_user_id int
		constraint friends_users_user_id_fk
			references users
				on update cascade on delete cascade,
	second_user_id int
		constraint friends_users_user_id_fk_2
			references users
				on update cascade on delete cascade
);
create table recovercode
(
	id serial not null,
	code varchar,
	generate_date date,
	email varchar
);

create unique index recovercode_id_uindex
	on recovercode (id);

alter table recovercode
	add constraint recovercode_pk
		primary key (id);



















